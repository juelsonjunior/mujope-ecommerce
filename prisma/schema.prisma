// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Product {
  id                Int      @id @default(autoincrement())
  imageUrl          String
  name              String   @unique
  description       String?
  price             Int
  category          Category @relation(fields: [categoryId], references: [id])
  categoryId        Int
  orderItems        OrderItem[]
  createAt          DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("products")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Product[]
  
  @@map("categories")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String 
  email     String   @unique
  password  String
  orders    Order[]
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}

model Order {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  status     String   @default("pending")
  total      Int
  items      OrderItem[]
  createAt   DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("orders")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Int

  @@map("orderItems")
}